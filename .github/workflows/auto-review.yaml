name: AutoReview

on:
    push:
        branches: [ main ]
    pull_request:

jobs:
    auto-review:
        runs-on: ubuntu-latest
        name: Lint ${{ matrix.check.name }}
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1' ]
                check:
                    -   name: CS
                        command: make cs_lint
                    -   name: Psalm
                        command: make psalm

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    tools: composer
                    coverage: none

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2

            -   name: Install PHP-CS-Fixer Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    working-directory: 'vendor-bin/php-cs-fixer'

            -   name: Install Psalm Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    working-directory: 'vendor-bin/psalm'

            -   name: Run ${{ matrix.check.name }}
                run: ${{ matrix.check.command }}

    # This is a "trick", a meta task which does not change, and we can use in
    # the protected branch rules as opposed to the E2E tests one above which
    # may change regularly.
    # This allows us to mark only this job as required instead of each individual
    # ever-changing E2E tests.
    validate-auto-review:
        name: Check AutoReview status
        runs-on: ubuntu-latest
        needs: auto-review
        if: always()
        steps:
            - name: Successful run
              if: ${{ !(contains(needs.*.result, 'failure')) }}
              run: exit 0

            - name: Failing run
              if: ${{ contains(needs.*.result, 'failure') }}
              run: exit 1

